data = {
    "Write 4B File": {

        "Size 4": {
            "FIO": [0.54, 0.13, 0.11, 0.1, 0.09, 0.1, 0.08, 0.09, 0.08, 0.09, 0.12, 0.1, 0.09, 0.06, 0.07, 0.05, 0.05, 0.04, 0.05, 0.03, 0.04, 0.03, 0.03, 0.04, 0.03, 0.04, 0.04, 0.04, 0.04, 0.04, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.02, 0.03, 0.02, 0.03, 0.03, 0.03, 0.02, 0.02, 0.03, 0.02, 0.03, 0.02, 0.02, 0.03, 0.03, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.02, 0.03, 0.03, 0.03, 0.03, ],
            "Java FileWriter": [0.04, 0.04, 0.04, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02, 0.01, 0.02, 0.02, 0.01, 0.02, 0.01, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.11, 0.02, 0.01, 0.02, 0.01, 0.02, 0.01, 0.02, 0.01, 0.02, 0.02, 0.01, 0.02, 0.02, 0.01, 0.02, 0.02, 0.01, 0.02, 0.02, 0.02, 0.01, 0.02, 0.02, 0.02, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01, 0.02, 0.02, 0.01, 0.02, 0.01, 0.02, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, ],
            "Java Files.write": [0.04, 0.02, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, ],
        },

        "Size 41943040": {
            "FIO": [62.8, 41.2, 36.9, 34.2, 37.4, 33.1, 33.5, 33.5, 33.1, 33.2, 33.7, 36.4, 40.7, 40.4, 36.0, 34.1, 33.7, 33.7, 33.4, 33.1, 33.6, 33.9, 33.6, 33.5, 33.5, 33.8, 34.6, 36.0, 35.1, 35.2, 34.4, 34.0, 33.4, 33.5, 34.2, 40.4, 42.1, 35.8, 34.3, 33.4, 33.3, 33.5, 33.6, 33.8, 33.8, 33.5, 33.9, 34.8, 34.2, 34.0, 33.9, 33.6, 40.1, 35.7, 34.2, 33.7, 33.3, 33.4, 33.0, 33.3, 33.4, 33.2, 33.6, 33.5, 33.4, 33.4, 33.2, 32.7, 33.1, 32.9, 32.8, 33.2, 32.8, 32.5, 33.4, 35.1, 34.1, 34.1, 33.7, 33.7, 33.3, 34.9, 34.7, 34.1, 33.6, 33.1, 33.1, 33.1, 33.0, 33.3, 33.0, 33.0, 33.0, 32.7, 32.9, 32.9, 33.2, 33.2, 33.5, 33.2, ],
            "Java FileWriter": [49.4, 44.9, 44.0, 44.1, 44.6, 44.3, 54.2, 62.5, 52.3, 46.1, 45.1, 44.1, 43.9, 44.3, 44.1, 43.8, 44.0, 43.9, 43.9, 44.0, 44.4, 44.1, 43.9, 43.6, 43.9, 43.7, 43.7, 44.0, 45.0, 43.9, 44.6, 43.9, 44.4, 43.7, 43.7, 43.8, 43.6, 43.8, 43.3, 44.0, 43.6, 43.7, 44.2, 45.3, 44.3, 44.0, 43.6, 45.2, 45.0, 45.1, 43.8, 43.5, 44.1, 44.2, 43.7, 45.1, 44.4, 43.8, 44.2, 44.1, 44.2, 44.0, 44.3, 32.6, 32.9, 32.8, 32.8, 32.4, 32.7, 32.9, 32.7, 32.7, 33.2, 32.1, 33.1, 34.5, 33.8, 33.5, 33.5, 33.2, 32.9, 32.8, 32.5, 33.1, 32.9, 33.5, 33.6, 33.4, 32.8, 32.7, 32.2, 32.2, 32.5, 32.5, 32.2, 32.6, 32.2, 32.2, 32.9, 32.2, ],
            "Java Files.write": [26.0, 25.8, 25.3, 25.3, 25.2, 24.9, 25.0, 24.6, 24.7, 25.1, 25.0, 24.8, 24.9, 25.0, 25.2, 25.0, 25.1, 25.0, 25.1, 25.0, 25.2, 25.2, 24.8, 24.9, 25.1, 24.8, 25.0, 25.2, 24.8, 25.0, 25.1, 24.9, 24.9, 25.0, 25.2, 25.2, 24.9, 25.0, 25.0, 25.0, 25.0, 24.7, 24.9, 24.8, 24.6, 24.8, 25.0, 24.8, 24.7, 25.1, 24.8, 24.6, 25.1, 24.9, 24.9, 25.5, 25.3, 24.9, 25.1, 25.0, 25.2, 25.2, 25.1, 24.8, 24.8, 25.5, 24.9, 25.4, 24.9, 24.6, 25.1, 24.7, 24.8, 25.0, 24.9, 25.2, 24.9, 25.1, 24.9, 24.9, 24.7, 25.2, 25.1, 25.1, 24.8, 24.6, 25.6, 24.8, 24.9, 24.7, 25.2, 24.6, 25.0, 24.9, 25.4, 24.7, 24.9, 24.7, 24.9, 24.6, ],
        },
    },
}

mdOutput = '''
## Measurement times

'''
for testType in data.keys():
    thisTestData = data[testType]
    mdOutput += f'''
### {testType}
'''
    for parameter in thisTestData.keys():
        mdOutput += f'''\n\n**Parameter**: {parameter}\n'''
        thisTestParameterizedData = thisTestData[parameter]

        means = []

        mdOutput += '''
| Method | Mean Time Per Operation | StDev |
| ---- | ------ | ------ |'''

        for method in thisTestParameterizedData.keys():
            times = thisTestParameterizedData[method]
            mean = sum(times) / len(times)
            variance = sum([((x - mean) ** 2) for x in times]) / len(times)
            stdev = variance ** 0.5
            mean = int(mean * 1000) / 1000
            stdev = int(stdev * 1000) / 1000
            means += [mean]
            mdOutput += f'''
| {method} | `{mean}` | `{stdev}` |'''

        bestOther = min(means[1:])
        z = means[0] / bestOther
        z = int(1000 * z) / 1000
        mdOutput += f"\n\nFIO / best other = `{z}`"


print(mdOutput)